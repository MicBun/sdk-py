name: Release Â· Build & Package Python SDK

on:
  # Run whenever you push a tag like v1.2.3
  push:
    tags:
      - 'v*.*.*'
  # Also allow manual re-runs
  workflow_dispatch:

permissions: write-all

jobs:
  build:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, 'windows-latest']

    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install gopy & goimports
        run: |
          go install github.com/go-python/gopy@v0.4.10
          go install golang.org/x/tools/cmd/goimports@latest
          echo "$HOME/go/bin" >> $GITHUB_PATH
        shell: bash

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential

      - name: Install build tools
        run: python -m pip install --upgrade pip install cibuildwheel pybindgen

      - name: Build wheels with cibuildwheel
        env:
          CIBW_BEFORE_BUILD: "make gopy_build"
          CIBW_SKIP: "*-musllinux*"
        run: cibuildwheel --output-dir wheelhouse

      - name: Upload wheels as artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}
          path: wheelhouse/*.whl

  publish:
    name: Publish Wheels to Release
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest

    steps:
      - name: Download all built wheels
        uses: actions/download-artifact@v4
        with:
          pattern: python-wheels-*
          merge-multiple: true
          path: dist/

      - name: Publish GitHub Release with Wheels
        uses: softprops/action-gh-release@v2
        with:
          files: dist/*.whl
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
